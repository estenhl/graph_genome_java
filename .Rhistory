size = c(701, 3416)
brute_force = c(12875390, 50535199)
fuzzy = c(79132058, 65995110)
errors = c(6, 4)
plot.new()
plot.new()
par(mfrow=c(1, 1)) # all plots on one page
plot(x, brute_force, type="n", main=F, col="black")
plot.new()
par(mfrow=c(1, 1)) # all plots on one page
plot(size, brute_force, type="n", main=F, col="black")
lines(size, brute_force, type="l", col="red")
lines(size, fuzzy, type="l", col="blue")
par=(new = T)
lines(size, fuzzy, type="l", col="blue")
plot.new()
par(mfrow=c(1, 1)) # all plots on one page
lines(size, fuzzy, type="l", col="blue")
plot.new()
par(mfrow=c(1, 1)) # all plots on one page
plot(size, fuzzy, type="n", main=F, col="black")
lines(size, brute_force, type="l", col="red")
par=(new = T)
lines(size, fuzzy, type="l", col="blue")
plot.new()
par(mfrow=c(1, 1)) # all plots on one page
plot(size, fuzzy, type="n", main=F, col="black")
lines(size, brute_force, type="l", col="red")
par=(new = T)
lines(size, fuzzy, type="l", col="blue")
plot(size, fuzzy, type="n", main=F, col="black")
plot(size, brute_force, type="l", col="red")
plot(size, fuzzy, type="n", xlim=range(c(0, 58215)), ylim=range(c(0, 356759366)) main=F, col="black")
plot(size, fuzzy, type="n", xlim=range(c(0, 58215)), ylim=range(c(0, 356759366)) main=F, col="black")
plot(size, fuzzy, type="n", xlim=range(c(0, 58215)), ylim=range(c(0, 356759366)), main=F, col="black")
plot(size, brute_force, type="l", col="red")
plot(size, brute_force, type="l", col="red")
plot(size, fuzzy, type="n", xlim=range(c(0, 58215)), ylim=range(c(0, 356759366)), main=F, col="black")
lines(size, fuzzy, type="l", col="blue")
size = c(701, 3416, 58215)
brute_force = c(12875390, 50535199, 356759366)
fuzzy = c(79132058, 65995110, 64211644)
errors = c(6, 4, 7)
par(mfrow=c(1, 1)) # all plots on one page
plot(size, fuzzy, type="n", xlim=range(c(0, 58215)), ylim=range(c(0, 356759366)), main=F, col="black")
lines(size, fuzzy, type="l", col="blue")
lines(size, brute_force, type="l", col="red")
size = c(701, 3416, 20931, 58215)
brute_force = c(12875390, 50535199, 171014065, 356759366)
fuzzy = c(79132058, 65995110, 53358038, 64211644)
errors = c(6, 4, 7, 7)
plot.new()
par(mfrow=c(1, 1)) # all plots on one page
plot(size, fuzzy, type="n", xlim=range(c(0, 58215)), ylim=range(c(0, 356759366)), main=F, col="black")
lines(size, fuzzy, type="l", col="blue")
lines(size, brute_force, type="l", col="red")
par(new = T)
par(new = T)
plot(x, errors, type="n", axes=F, xlab=NA, ylab=NA)
lines(x, errors, lty=2)
plot(size, errors, type="n", axes=F, xlab=NA, ylab=NA)
lines(size, errors, lty=2)
axis(side = 4)
mtext(side = 4, line = 3, 'Correctly mapped characters', col="black")
size = c(701, 3416, 20931, 37801, 58215)
brute_force = c(12875390, 50535199, 171014065, 356759366, 354403311)
fuzzy = c(79132058, 65995110, 53358038, 64211644, 57946033)
errors = c(6, 4, 7, 7, 6)
plot.new()
par(mfrow=c(1, 1)) # all plots on one page
plot(size, fuzzy, type="n", xlim=range(c(0, 58215)), ylim=range(c(0, 356759366)), main=F, col="black")
lines(size, fuzzy, type="l", col="blue")
lines(size, brute_force, type="l", col="red")
par(new = T)
plot.new()
par(mfrow=c(1, 1)) # all plots on one page
plot(size, fuzzy, type="n", xlab="Number of nodes", ylab="Nanoseconds", xlim=range(c(0, 58215)), ylim=range(c(0, 356759366)), main=F, col="black")
lines(size, fuzzy, type="l", col="blue")
lines(size, brute_force, type="l", col="red")
par(new = T)
plot.new()
par(mfrow=c(1, 1)) # all plots on one page
plot(size, fuzzy, type="n", xlab="Number of nodes", ylab="Nanoseconds", xlim=range(c(0, 58215)), ylim=range(c(0, 356759366)), main=F, col="black")
lines(size, fuzzy, type="l", col="blue")
lines(size, brute_force, type="l", col="red")
par(new = T)
plot(size, errors, type="n", axes=F, xlab=NA, ylab=NA)
lines(size, errors, lty=2)
axis(side = 4)
mtext(side = 4, line = 3, 'Correctly mapped characters', col="black")
plot.new()
par(mfrow=c(1, 1)) # all plots on one page
plot(size, fuzzy, type="n", xlab="Number of nodes", ylab="Nanoseconds", xlim=range(c(0, 58215)), ylim=range(c(0, 356759366)), main=F, col="black")
lines(size, fuzzy, type="l", col="blue")
lines(size, brute_force, type="l", col="red")
par(new = T)
plot(size, errors, type="n", axes=F, xlab=NA, ylab=NA)
lines(size, errors, lty=2)
axis(side = 4)
mtext(side = 4, line = 3, 'Correctly mapped characters', col="black")
size = c(701, 3416, 20931, 37801, 58215)
brute_force = c(5778160, 31230659, 133874070, 228877626, 396109063)
fuzzy = c(71257296, 56769790, 52002374, 64387599, 65853684)
errors = c(-0.1, -0.08, 0.0, -0.1, 0.0)
plot.new()
par(mfrow=c(1, 1)) # all plots on one page
plot(size, fuzzy, type="n", xlab="Number of nodes", ylab="Nanoseconds", xlim=range(c(0, 58215)), ylim=range(c(0, 356759366)), main=F, col="black")
lines(size, fuzzy, type="l", col="blue")
lines(size, brute_force, type="l", col="red")
par(new = T)
plot(size, errors, type="n", axes=F, xlab=NA, ylab=NA)
lines(size, errors, lty=2)
axis(side = 4)
mtext(side = 4, line = 3, 'Correctly mapped characters', col="black")
size = c(701, 3416, 20931, 37801, 58215, 152451)
brute_force = c(5778160, 31230659, 133874070, 228877626, 396109063, 1221584480)
fuzzy = c(71257296, 56769790, 52002374, 64387599, 65853684, 259123126)
errors = c(-0.1, -0.08, 0.0, -0.1, 0.0, -0.08)
plot.new()
par(mfrow=c(1, 1)) # all plots on one page
plot(size, fuzzy, type="n", xlab="Number of nodes", ylab="Nanoseconds", xlim=range(c(0, 58215)), ylim=range(c(0, 356759366)), main=F, col="black")
lines(size, fuzzy, type="l", col="blue")
lines(size, brute_force, type="l", col="red")
par(new = T)
plot(size, errors, type="n", axes=F, xlab=NA, ylab=NA)
lines(size, errors, lty=2)
axis(side = 4)
brute_force = c(5778160, 31230659, 133874070, 228877626, 396109063, 1221584480)
fuzzy = c(71257296, 56769790, 52002374, 64387599, 65853684, 259123126)
errors = c(-0.1, -0.08, 0.0, -0.1, 0.0, -0.08)
plot.new()
par(mfrow=c(1, 1)) # all plots on one page
plot(size, fuzzy, type="n", xlab="Number of nodes", ylab="Nanoseconds", xlim=range(c(0, 152451)), ylim=range(c(0, 1221584480)), main=F, col="black")
lines(size, fuzzy, type="l", col="blue")
lines(size, brute_force, type="l", col="red")
par(new = T)
plot(size, errors, type="n", axes=F, xlab=NA, ylab=NA)
lines(size, errors, lty=2)
axis(side = 4)
size = c(701, 3416, 20931, 37801, 58215, 152451)
brute_force = c(5778160, 31230659, 133874070, 228877626, 396109063, 1221584480)
fuzzy = c(71257296, 56769790, 52002374, 64387599, 65853684, 259123126)
errors = c(-0.1, -0.08, 0.0, -0.1, 0.0, -0.08)
plot.new()
par(mfrow=c(1, 1)) # all plots on one page
plot(size, fuzzy, type="n", xlab="Number of nodes", ylab="Nanoseconds", xlim=range(c(0, 152451)), ylim=range(c(0, 1221584480)), main=F, col="black")
lines(size, fuzzy, type="l", col="blue")
lines(size, brute_force, type="l", col="red")
par(new = T)
plot(size, errors, type="n", axes=F, xlab=NA, ylab=NA)
lines(size, errors, lty=2)
axis(side = 4)
mtext(side = 4, line = 3, 'Score difference', col="black")
size = c(701, 3416, 20931, 37801, 58215, 152451)
brute_force = c(5778160, 31230659, 133874070, 228877626, 396109063, 1221584480)
fuzzy = c(71257296, 56769790, 52002374, 64387599, 65853684, 259123126)
errors = c(-0.1, -0.08, 0.0, -0.1, 0.0, -0.08)
plot.new()
par(mfrow=c(1, 1)) # all plots on one page
plot(size, fuzzy, type="n", xlab="Number of nodes", ylab="Nanoseconds", xlim=range(c(0, 152451)), ylim=range(c(0, 1221584480)), main=F, col="black")
lines(size, fuzzy, type="l", col="blue")
lines(size, brute_force, type="l", col="red")
par(new = T)
plot(size, errors, type="n", axes=F, xlab=NA, ylab=NA)
lines(size, errors, lty=2)
axis(side = 4)
mtext(side = 4, line = 3, 'Score difference', col="black")
values = matrix(c(0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1), nrow=6, ncol=6)
heatmap(values, Colv=NA, Rowv=NA)
View(values)
View(values)
values = matrix(c(
values = matrix(c(
1.0,1.0,1.0,1.0,1.0,1.0,0.0,1.0,1.0,1.0,1.0,1.0,0.0,0.6666666666666667,0.33333333333333337,0.6666666666666667,1.0,0.6666666666666667,0.0,0.0,0.6666666666666667,0.6666666666666667,0.0,0.0,0.0,0.0,0.33333333333333337,0.0,0.0,0.0,0.0,0.0,0.33333333333333337,0.0,0.33333333333333337,0.0), Colv=NA, Rowv=NA)
values = matrix(c(1.0,1.0,1.0,1.0,1.0,1.0,0.0,1.0,1.0,1.0,1.0,1.0,0.0,0.6666666666666667,0.33333333333333337,0.6666666666666667,1.0,0.6666666666666667,0.0,0.0,0.6666666666666667,0.6666666666666667,0.0,0.0,0.0,0.0,0.33333333333333337,0.0,0.0,0.0,0.0,0.0,0.33333333333333337,0.0,0.33333333333333337,0.0), Colv=NA, Rowv=NA)
heatmap(values, Colv=NA, Rowv=NA)
values = matrix(c(1.0,1.0,1.0,1.0,1.0,1.0,0.0,1.0,1.0,1.0,1.0,1.0,0.0,0.6666666666666667,0.33333333333333337,0.6666666666666667,1.0,0.6666666666666667,0.0,0.0,0.6666666666666667,0.6666666666666667,0.0,0.0,0.0,0.0,0.33333333333333337,0.0,0.0,0.0,0.0,0.0,0.33333333333333337,0.0,0.33333333333333337,0.0), Colv=NA, Rowv=NA)
values = matrix(c(1.0,1.0,1.0,1.0,1.0,1.0,0.0,1.0,1.0,1.0,1.0,1.0,0.0,0.66,0.33,0.66,1.0,0.66,0.0,0.0,0.66,0.66,0.0,0.0,0.0,0.0,0.33,0.0,0.0,0.0,0.0,0.0,0.33,0.0,0.33,0.0), Colv=NA, Rowv=NA)
values = matrix(c(1.0,1.0,1.0,1.0,1.0,1.0,0.0,1.0,1.0,1.0,1.0,1.0,0.0,0.66,0.33,0.66,1.0,0.66,0.0,0.0,0.66,0.66,0.0,0.0,0.0,0.0,0.33,0.0,0.0,0.0,0.0,0.0,0.33,0.0,0.33,0.0), nrow=6, ncol=6)
heatmap(values, Colv=NA, Rowv=NA)
x=c(1, 2, 3, 4, 5, 6, 7, 8)
y=c(1.0, 0.99, 0.99, 0.7, 0.26, 0.7, 0.1, 0.01)
plot(x, y)
x=c(1, 2, 3, 4, 5, 6, 7, 8)
y=c(1.0, 0.99, 0.99, 0.7, 0.26, 0.07, 0.01, 0.001)
plot(x, y)
lines(x, y)
spline(x, y)
spline(x, y)
plot(spline(x, y))
lines(spline(x, y))
x=c(1, 2, 3, 4, 5, 6, 7, 8)
y=c(1.0, 0.99, 0.99, 0.7, 0.26, 0.07, 0.01, 0.001)
plot(x, y)
lines(spline(x, y))
x=c(1, 2, 3, 4, 5, 6, 7, 8)
y=c(1.0, 0.999, 0.992, 0.7, 0.26, 0.07, 0.01, 0.001)
plot(x, y)
lines(spline(x, y))
values = matrix(c(1.0,1.0,1.0,1.0,1.0,1.0,0.19999999999999996,1.0,1.0,1.0,1.0,1.0,0.06666666666666665,0.5666666666666667,1.0,1.0,1.0,1.0,0.0,0.2666666666666667,0.9333333333333333,0.9666666666666667,0.9666666666666667,1.0,0.0,0.19999999999999996,0.6,0.9,0.9666666666666667,0.9666666666666667,0.0,0.06666666666666665,0.43333333333333335,0.9,0.9333333333333333,0.9666666666666667), Colv=NA, Rowv=NA)
heatmap(values, Colv=NA, Rowv=NA)
values = matrix(c(1.0,1.0,1.0,1.0,1.0,1.0,0.19999999999999996,1.0,1.0,1.0,1.0,1.0,0.06666666666666665,0.5666666666666667,1.0,1.0,1.0,1.0,0.0,0.2666666666666667,0.9333333333333333,0.9666666666666667,0.9666666666666667,1.0,0.0,0.19999999999999996,0.6,0.9,0.9666666666666667,0.9666666666666667,0.0,0.06666666666666665,0.43333333333333335,0.9,0.9333333333333333,0.9666666666666667), nrow=6, ncol=6)
heatmap(values, Colv=NA, Rowv=NA)
View(values)
values = matrix(c(0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.38095238095238093,0.0,0.0,0.0,0.0,1.0,0.8333333333333334,0.125,0.0,0.03333333333333333,0.03333333333333333,1.0,0.9,0.35294117647058826,0.0,0.0,0.0,1.0,1.0,0.4,0.0,0.14285714285714285,0.0), nrow=6, ncol=6)
heatmap(values, Colv=NA, Rowv=NA)
# Heatmap of m/n
install.packages("RColorBrewer")
library("RColorBrewer")
#display all colour schemes
display.brewer.all()
heatmap(data_matrix,col=brewer.pal(9,"Blues"))
values = matrix(c(0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.38095238095238093,0.0,0.0,0.0,0.0,1.0,0.8333333333333334,0.125,0.0,0.03333333333333333,0.03333333333333333,1.0,0.9,0.35294117647058826,0.0,0.0,0.0,1.0,1.0,0.4,0.0,0.14285714285714285,0.0), nrow=6, ncol=6)
heatmap(values, Colv=NA, Rowv=NA)
values = matrix(c(0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.38095238095238093,0.0,0.0,0.0,0.0,1.0,0.8333333333333334,0.125,0.0,0.03333333333333333,0.03333333333333333,1.0,0.9,0.35294117647058826,0.0,0.0,0.0,1.0,1.0,0.4,0.0,0.14285714285714285,0.0), nrow=6, ncol=6, col=brewer.pal(9,"Blues"))
display.brewer.all()
values = matrix(c(0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.38095238095238093,0.0,0.0,0.0,0.0,1.0,0.8333333333333334,0.125,0.0,0.03333333333333333,0.03333333333333333,1.0,0.9,0.35294117647058826,0.0,0.0,0.0,1.0,1.0,0.4,0.0,0.14285714285714285,0.0), nrow=6, ncol=6, col=brewer.pal(9,"Blues"))
if (!require("gplots")) {
install.packages("gplots", dependencies = TRUE)
library(gplots)
}
if (!require("RColorBrewer")) {
install.packages("RColorBrewer", dependencies = TRUE)
library(RColorBrewer)
}
mat_data = matrix(c(0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.38095238095238093,0.0,0.0,0.0,0.0,1.0,0.8333333333333334,0.125,0.0,0.03333333333333333,0.03333333333333333,1.0,0.9,0.35294117647058826,0.0,0.0,0.0,1.0,1.0,0.4,0.0,0.14285714285714285,0.0), nrow=6, ncol=6, col=brewer.pal(9,"Blues"))
mat_data = matrix(c(0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.38095238095238093,0.0,0.0,0.0,0.0,1.0,0.8333333333333334,0.125,0.0,0.03333333333333333,0.03333333333333333,1.0,0.9,0.35294117647058826,0.0,0.0,0.0,1.0,1.0,0.4,0.0,0.14285714285714285,0.0), nrow=6, ncol=6)
my_palette <- colorRampPalette(c("red", "yellow", "green"))(n = 299)
# (optional) defines the color breaks manually for a "skewed" color transition
col_breaks = c(seq(-1,0,length=100),  # for red
seq(0,0.8,length=100),              # for yellow
seq(0.8,1,length=100))              # for green
# creates a 5 x 5 inch image
png("../images/heatmaps_in_r.png",    # create PNG for the heat map
width = 5*300,        # 5 x 300 pixels
height = 5*300,
res = 300,            # 300 pixels per inch
pointsize = 8)        # smaller font size
heatmap.2(mat_data,
cellnote = mat_data,  # same data set for cell labels
main = "Correlation", # heat map title
notecol="black",      # change font color of cell labels to black
density.info="none",  # turns off density plot inside color legend
trace="none",         # turns off trace lines inside the heat map
margins =c(12,9),     # widens margins around plot
col=my_palette,       # use on color palette defined earlier
breaks=col_breaks,    # enable color transition at specified limits
dendrogram="row",     # only draw a row dendrogram
Colv="NA")
Colv="NA")
if (!require("gplots")) {
install.packages("gplots", dependencies = TRUE)
library(gplots)
}
if (!require("RColorBrewer")) {
install.packages("RColorBrewer", dependencies = TRUE)
library(RColorBrewer)
}
my_palette <- colorRampPalette(c("red", "yellow", "green"))(n = 299)
# (optional) defines the color breaks manually for a "skewed" color transition
col_breaks = c(seq(-1,0,length=100),  # for red
seq(0,0.8,length=100),              # for yellow
seq(0.8,1,length=100))              # for green
heatmap.2(mat_data,cellnote = mat_data,main = "Correlation",notecol="black",density.info="none",trace="none",margins =c(12,9),col=my_palette,breaks=col_breaks,dendrogram="row",Colv="NA")
png("../images/heatmaps_in_r.png",    # create PNG for the heat map
width = 5*300,        # 5 x 300 pixels
height = 5*300,
res = 300,            # 300 pixels per inch
pointsize = 8)        # smaller font size
heatmap.2(mat_data,cellnote = mat_data,main = "Correlation",notecol="black",density.info="none",trace="none",margins =c(12,9),col=my_palette,breaks=col_breaks,dendrogram="row",Colv="NA")
mat_data = matrix(c(0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.38095238095238093,0.0,0.0,0.0,0.0,1.0,0.8333333333333334,0.125,0.0,0.03333333333333333,0.03333333333333333,1.0,0.9,0.35294117647058826,0.0,0.0,0.0,1.0,1.0,0.4,0.0,0.14285714285714285,0.0), nrow=6, ncol=6)
heatmap(values, Colv=NA, Rowv=NA, col=my_palette)
# for green
mat_data = matrix(c(0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.38095238095238093,0.0,0.0,0.0,0.0,1.0,0.8333333333333334,0.125,0.0,0.03333333333333333,0.03333333333333333,1.0,0.9,0.35294117647058826,0.0,0.0,0.0,1.0,1.0,0.4,0.0,0.14285714285714285,0.0), nrow=6, ncol=6)
heatmap(values, Colv=NA, Rowv=NA, col=my_palette)
plot.new()
par(new=TRUE)
plot.new()
par(new=FALSE)
plot.new()
heatmap(values, Colv=NA, Rowv=NA, col=my_palette)
View(mat_data)
if (!require("gplots")) {
install.packages("gplots", dependencies = TRUE)
library(gplots)
}
if (!require("RColorBrewer")) {
install.packages("RColorBrewer", dependencies = TRUE)
library(RColorBrewer)
}
my_palette <- colorRampPalette(c("red", "yellow", "green"))(n = 299)
mat_data = matrix(c(0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.38095238095238093,0.0,0.0,0.0,0.0,1.0,0.8333333333333334,0.125,0.0,0.03333333333333333,0.03333333333333333,1.0,0.9,0.35294117647058826,0.0,0.0,0.0,1.0,1.0,0.4,0.0,0.14285714285714285,0.0), nrow=6, ncol=6)
heatmap(values, Colv=NA, Rowv=NA, col=my_palette)
heatmap(mat_data, Colv=NA, Rowv=NA, col=my_palette)
